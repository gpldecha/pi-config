#!/usr/bin/env python3

import zmq
import argparse
import time
import subprocess
import os
import signal


if __name__ == "__main__":
    parser = argparse.ArgumentParser(description='Camera server http server.')
    parser.add_argument('--port', type=str, default='5000', help='port to listen on')
    args = parser.parse_args()

    context = zmq.Context()
    socket = context.socket(zmq.REP)
    socket.bind("tcp://0.0.0.0:" + args.port)

    print('start streaming')
    pycmd = os.path.join(os.path.dirname(os.path.abspath(__file__)), 'streameye/extras/raspimjpeg.py')
    cmd = 'python3 ' + pycmd + ' -w 640 -h 480 -q 40 --awb=off --vflip --ev 5 -r 40 | streameye -m 1'
    proc = subprocess.Popen(cmd,  stdout=subprocess.PIPE,
                       shell=True, preexec_fn=os.setsid)
    print('waiting for requests')
    while True:

        try:
            message = socket.recv_string()
            print('stopping camera')
            os.killpg(os.getpgid(proc.pid), signal.SIGTERM)  # Send the signal to all the process groups
            time.sleep(3)
            print('start streaming')
            proc = subprocess.Popen(cmd, stdout=subprocess.PIPE,
                                    shell=True, preexec_fn=os.setsid)
            socket.send_string("Ok")
        except:
            print("ZMQServer:Error")
            os.killpg(os.getpgid(proc.pid), signal.SIGTERM)  # Send the signal to all the process groups
            socket.close()
            exit()
